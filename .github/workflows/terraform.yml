name: Terraform Workflow

on:
  push:
    branches:
      - main
    paths:
      - .infrastructure/**/*.tf
      - .github/workflows/terraform.yml
      - .github/workflows/shared-terraform-*.yml
  pull_request:
    branches:
      - main
    paths:
      - .infrastructure/**/*.tf
      - .github/workflows/terraform.yml
      - .github/workflows/shared-terraform-*.yml

env:
  SERVICE_NAME: poc-user-api
  REPOSITORY_NAME: poc-user-api

jobs:
  plan:
    uses: ./.github/workflows/shared-terraform-plan.yml
    secrets: inherit
    with:
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      gcp_region: ${{ vars.GCP_REGION }}
      gcp_project_number: ${{ vars.GCP_PROJECT_NUMBER }}
      terraform_state_bucket: ${{ vars.TERRAFORM_STATE_BUCKET }}
      wif_provider: ${{ vars.WIF_PROVIDER }}
      wif_sa: ${{ vars.WIF_SA }}

  apply:
    needs: plan
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/shared-terraform-apply.yml
    secrets: inherit
    with:
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      gcp_region: ${{ vars.GCP_REGION }}
      gcp_project_number: ${{ vars.GCP_PROJECT_NUMBER }}
      terraform_state_bucket: ${{ vars.TERRAFORM_STATE_BUCKET }}
      wif_provider: ${{ vars.WIF_PROVIDER }}
      wif_sa: ${{ vars.WIF_SA }}

  use-output:
    needs: apply
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Use Terraform Output
        run: |
          echo "Terraform apply output: ${{ needs.apply.outputs.apply_result }}"

          # Parse the JSON and use specific values
          RESULT='${{ needs.apply.outputs.apply_result }}'
          # Example: Extract a specific output value if it exists
          if echo "$RESULT" | jq -e '.some_output_key' > /dev/null; then
            SOME_VALUE=$(echo "$RESULT" | jq -r '.some_output_key.value')
            echo "Extracted value: $SOME_VALUE"
          fi